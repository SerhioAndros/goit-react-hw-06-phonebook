{"version":3,"sources":["components/contactList/contactListItem/ContactListItem.module.css","components/App.module.css","components/filter/Filter.module.css","components/contactList/ContactList.module.css","components/contactForm/ContactForm.module.css","redux/contacts-actions.js","redux/contacts-reducer.js","redux/store.js","redux/contacts-operations.js","redux/contacts-selectors.js","components/contactForm/ContactForm.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/loader/Loader.js","components/App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","contactItems","createReducer","_","payload","state","filter","id","contactFilter","loading","combineReducers","middleware","getDefaultMiddleware","store","configureStore","reducer","contacts","contactsReducer","axios","defaults","baseURL","getLoading","getFilter","getContacts","getFilteredContacts","createSelector","filterNormilized","toLowerCase","trim","name","includes","ContactForm","number","handleInputChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","props","map","contact","alert","onSubmit","uniqueIdName","uuid","uniqueIdNumber","this","className","styles","addContactForm","htmlFor","addContactFormLabel","addContactFormInput","type","pattern","title","required","onChange","placeholder","addContactFormBtn","Component","connect","dispatch","object","post","then","data","catch","error","addContact","ContactListItem","onDeleteContact","contactItem","contactName","contactNumber","deleteContactBtn","onClick","contactId","delete","contactList","target","filterInputLabel","filterInput","ContactsLoader","color","height","width","App","fetchContacts","container","mainHeader","additionalHeader","loadingContacts","a","get","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffeafd85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__1t0cM\",\"contactName\":\"ContactListItem_contactName__3uQsh\",\"contactNumber\":\"ContactListItem_contactNumber__EYRvn\",\"deleteContactBtn\":\"ContactListItem_deleteContactBtn__2qQuI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3DwO9\",\"mainHeader\":\"App_mainHeader__1tz80\",\"additionalHeader\":\"App_additionalHeader__2WOho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInputLabel\":\"Filter_filterInputLabel__dX2dp\",\"filterInput\":\"Filter_filterInput__3h89m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3nnTE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContactForm\":\"ContactForm_addContactForm__2oW2O\",\"addContactFormLabel\":\"ContactForm_addContactFormLabel__3QtXW\",\"addContactFormInput\":\"ContactForm_addContactFormInput__2p-80\",\"addContactFormBtn\":\"ContactForm_addContactFormBtn__2mt-0\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"contacts/fetchContactRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"contacts/fetchContactSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const filterContacts = createAction(\"contacts/filterContacts\");\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filterContacts,\r\n} from \"./contacts-actions\";\r\n\r\nconst contactItems = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst contactFilter = createReducer(\"\", {\r\n  [filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({ contactItems, contactFilter, loading });\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\n\r\nimport contactsReducer from \"./contacts-reducer\";\r\n\r\nconst middleware = [...getDefaultMiddleware()];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n});\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from \"./contacts-actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nexport const fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact =\r\n  ({ name, number }) =>\r\n  (dispatch) => {\r\n    const contact = { name, number };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n      .post(\"/contacts\", contact)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch((error) => dispatch(addContactError(error)));\r\n  };\r\n\r\nexport const deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error)));\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getLoading = (state) => state.contacts.loading;\r\nexport const getFilter = (state) => state.contacts.contactFilter;\r\nexport const getContacts = (state) => state.contacts.contactItems;\r\n\r\n// составной селектор (для примера)\r\n//\r\n// export const getFilteredContacts = (state) => {\r\n//   const contacts = getContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const filterNormilized = filter.toLowerCase().trim();\r\n//   return contacts.filter(({ name }) =>\r\n//     name.toLowerCase().trim().includes(filterNormilized)\r\n//   );\r\n// };\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const filterNormilized = filter.toLowerCase().trim();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().trim().includes(filterNormilized)\r\n    );\r\n  }\r\n);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/contacts-operations\";\r\nimport { getContacts } from \"../../redux/contacts-selectors\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleInputChange = (evt) => {\r\n    const { name, value } = evt.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contacts = this.props.contacts;\r\n    if (!name.trim() || !number.trim())\r\n      return alert(\"You've missed something :)\");\r\n    if (contacts.map((contact) => contact.name).includes(name.trim()))\r\n      return alert(`\"${name.trim()}\" is already in contacts`);\r\n    if (contacts.map((contact) => contact.number).includes(number.trim()))\r\n      return alert(`\"${number.trim()}\" is already in contacts`);\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const uniqueIdName = uuid();\r\n    const uniqueIdNumber = uuid();\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.addContactForm}>\r\n        <label htmlFor={uniqueIdName} className={styles.addContactFormLabel}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={styles.addContactFormInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id={uniqueIdName}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={this.state.name}\r\n          onChange={this.handleInputChange}\r\n          placeholder=\"Name\"\r\n        />\r\n        <label htmlFor={uniqueIdNumber} className={styles.addContactFormLabel}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={styles.addContactFormInput}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          id={uniqueIdNumber}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          value={this.state.number}\r\n          onChange={this.handleInputChange}\r\n          placeholder=\"Tel. number\"\r\n        />\r\n\r\n        <button type=\"submit\" className={styles.addContactFormBtn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (object) => dispatch(addContact(object)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => (\r\n  <li className={styles.contactItem}>\r\n    <p className={styles.contactName}>\r\n      {name}: <span className={styles.contactNumber}>{number}</span>\r\n    </p>\r\n    <button\r\n      className={styles.deleteContactBtn}\r\n      type=\"button\"\r\n      onClick={() => onDeleteContact(id)}\r\n    >\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport ContactListItem from \"./contactListItem/ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/contacts-operations\";\r\nimport {\r\n  getFilteredContacts,\r\n  getContacts,\r\n} from \"../../redux/contacts-selectors\";\r\n\r\nconst ContactList = ({ contacts, onClick }) => (\r\n  <ul className={styles.contactList}>\r\n    {contacts.map((contact) => (\r\n      <ContactListItem\r\n        key={contact.id}\r\n        id={contact.id}\r\n        name={contact.name}\r\n        number={contact.number}\r\n        onDeleteContact={onClick}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  if (!getFilteredContacts(state)) {\r\n    return {\r\n      contacts: getContacts(state),\r\n    };\r\n  }\r\n  return { contacts: getFilteredContacts(state) };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onClick: (contactId) => dispatch(deleteContact(contactId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterContacts } from \"../../redux/contacts-actions\";\r\nimport { getFilter } from \"../../redux/contacts-selectors\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <>\r\n    <label className={styles.filterInputLabel}>Find contacts by name</label>\r\n    <input\r\n      className={styles.filterInput}\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={value}\r\n      onChange={onChange}\r\n      placeholder=\"Contact\"\r\n    />\r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (evt) => dispatch(filterContacts(evt.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import Loader from \"react-loader-spinner\";\r\n\r\nexport const ContactsLoader = () => {\r\n  return <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />;\r\n};\r\n","// import React from \"react\";\r\nimport styles from \"./App.module.css\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\nimport { fetchContacts } from \"../redux/contacts-operations\";\r\nimport { getLoading } from \"../redux/contacts-selectors\";\r\nimport { ContactsLoader } from \"./loader/Loader\";\r\n\r\nclass App extends Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={styles.container}>\r\n        <h1 className={styles.mainHeader}>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2 className={styles.additionalHeader}>Contacts</h2>\r\n\r\n        <Filter />\r\n        {this.props.loadingContacts && <ContactsLoader />}\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loadingContacts: getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchContacts: () => dispatch(fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store.js\";\nimport \"./styles.css\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}